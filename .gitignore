### Project Specific ###
**/*.generated.ts
**/fixtures/generated/**

### TypeScript ###
dist/**
tests/runner/**

### Rust ###
# Compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore, because we created executables instead of libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

### Github Action ###
## TypeScript package output
# Keep the `ts` bundle output because the Github Action requires `.js` as the entry point
!/dist/index.js
!/dist/licenses.txt

### Node ###
# Dependency directories
node_modules/
jspm_packages/

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# TypeScript cache
*.tsbuildinfo

## Turborepo
.turbo

## Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

### Next.js ###
/.next/
/out/

### Jetbrains IDE ###
*.iws
*.iml
*.ipr
/.idea/**
!/.idea/codeStyles/
!/.idea/codeStyles/**
!/.idea/inspectionProfiles/
!/.idea/inspectionProfiles/**
!/.idea/modules/
!/.idea/modules/**
!/.idea/jsLinters/
!/.idea/jsLinters/**
!/.idea/prettier.xml
!/.idea/.gitignore

### VS Code ###
.vscode/
!.vscode/settings.json
!.vscode/extensions.json

### Mac OS ###
.DS_Store

### Secrets ###
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
